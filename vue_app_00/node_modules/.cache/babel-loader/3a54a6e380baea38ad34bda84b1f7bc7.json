{"remainingRequest":"C:\\xampp\\htdocs\\CL\\PROJECT2\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\CL\\PROJECT2\\vue_app_00\\src\\main.js","dependencies":[{"path":"C:\\xampp\\htdocs\\CL\\PROJECT2\\vue_app_00\\src\\main.js","mtime":1545294455228},{"path":"C:\\xampp\\htdocs\\CL\\PROJECT2\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\xampp\\htdocs\\CL\\PROJECT2\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport 'mint-ui/lib/style.css';\nVue.config.productionTip = false; //5: 设置请求的根路径 \n//Vue.http.options.root = \"http://127.0.0.1/vue_ser/\";\n//6:全局设置post 时候表音的数据组织格式为 application/x-www-form-urlencoded\n//Vue.http.options.emulateJSON = true;\n// 导入 MUI 的样式表， 和 Bootstrap 用法没有差别\n\nimport './lib/mui/css/mui.css'; // 导入 MUI 的样式表，扩展图标样式，购物车图标\n// 还需要加载图标字体文件\n\nimport './lib/mui/css/icons-extra.css';\nimport './lib/mui/css/app.css'; // 0.1:引入Vuex\n\nimport Vuex from \"vuex\"; // 0.2:注册Vuex组件\n\nVue.use(Vuex); // 0.3:创建Vuex实例对象\n\nvar store = new Vuex.Store({\n  state: {\n    cartCount: 0\n  },\n  mutations: {\n    increment: function increment(state, count) {\n      state.cartCount += count;\n    },\n    substract: function substract(state) {\n      state.cartCount--;\n    },\n    clear: function clear(state) {\n      state.cartCount = 0;\n    }\n  },\n  getters: {\n    optCartCount: function optCartCount(state) {\n      return state.cartCount;\n    }\n  }\n}); // 0.4:将Vuex对象注册Vue对象\n//1:引入mint-ui Header组件\n\nimport { Header, Swipe, SwipeItem, Button } from \"mint-ui\"; //2:注册Header组件\n\nVue.component(Header.name, Header); //3.注册Swipe/SwipeItem组件\n\nVue.component(Swipe.name, Swipe);\nVue.component(SwipeItem.name, SwipeItem);\nVue.component(Button.name, Button); //3.1引入axios库\n\nimport axios from 'axios';\naxios.defaults.withCredentials = true;\nVue.prototype.axios = axios; //4.引入vue-resource库\n\nimport VueResource from \"vue-resource\"; //5.注册vue-resource库\n\nVue.use(VueResource); //6.配置vue-resource\n//6.1设置请求根目录\n\nVue.http.options.root = \"http://127.0.0.1:3000/\"; //6:全局设置post 时候表单的数据组织格式为 application/x-www-form-urlencoded\n//将提交数据进行转码操作\n\nVue.http.options.emulateJSON = true;\nVue.http.options.withCredentials = true; //7.创建日期类型过滤器\n//val:原先日期对象\n\nVue.filter(\"datatimeFilter\", function (val) {\n  var data = new Date(val);\n  var y = data.getFullYear();\n  var m = data.getMonth() + 1;\n  var d = data.getDate();\n  var h = data.getHours();\n  var mi = data.getMinutes();\n  var s = data.getSeconds();\n  m < 10 && (m = \"0\" + m);\n  d < 10 && (d = \"0\" + d);\n  return \"\".concat(y, \"-\").concat(m, \"-\").concat(d, \" \").concat(h, \":\").concat(mi, \":\").concat(s);\n}); //设置请求服务器根目录\n//将提交数据进行转码操作\n//7.创建一个日期类型的过滤器\n//7.1:创建日期对象\n//7.4:拼接字符串返回\n\nnew Vue({\n  router: router,\n  render: function render(h) {\n    return h(App);\n  },\n  store: store //将Vuex对象注册 Vue实例\n\n}).$mount('#app');",{"version":3,"sources":["src\\main.js"],"names":["Vue","App","router","config","productionTip","Vuex","use","store","Store","state","cartCount","mutations","increment","count","substract","clear","getters","optCartCount","Header","Swipe","SwipeItem","Button","component","name","axios","defaults","withCredentials","prototype","VueResource","http","options","root","emulateJSON","filter","val","data","Date","y","getFullYear","m","getMonth","d","getDate","h","getHours","mi","getMinutes","s","getSeconds","render","$mount"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAM,uBAAN;AAEAF,IAAIG,MAAJ,CAAWC,aAAX,GAA2B,KAA3B,C,CACA;AACA;AACA;AACA;AACA;;AACA,OAAO,uBAAP,C,CACA;AACA;;AACA,OAAO,+BAAP;AAEA,OAAO,uBAAP,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;;AACAL,IAAIM,GAAJ,CAAQD,IAAR,E,CACA;;AACA,IAAIE,QAAM,IAAIF,KAAKG,KAAT,CAAe;AACvBC,SAAM;AACJC,eAAU;AADN,GADiB;AAIvBC,aAAU;AACRC,aADQ,qBACEH,KADF,EACQI,KADR,EACc;AAACJ,YAAMC,SAAN,IAAiBG,KAAjB;AAAuB,KADtC;AAERC,aAFQ,qBAEEL,KAFF,EAEQ;AAACA,YAAMC,SAAN;AAAkB,KAF3B;AAGRK,SAHQ,iBAGFN,KAHE,EAGI;AAACA,YAAMC,SAAN,GAAgB,CAAhB;AAAkB;AAHvB,GAJa;AASvBM,WAAQ;AACNC,kBAAa,sBAASR,KAAT,EAAe;AAC1B,aAAOA,MAAMC,SAAb;AACD;AAHK;AATe,CAAf,CAAV,C,CAeA;AAEA;;AACA,SAAOQ,MAAP,EAAcC,KAAd,EAAoBC,SAApB,EAA8BC,MAA9B,QAA2C,SAA3C,C,CACA;;AACArB,IAAIsB,SAAJ,CAAcJ,OAAOK,IAArB,EAA0BL,MAA1B,E,CACA;;AACAlB,IAAIsB,SAAJ,CAAcH,MAAMI,IAApB,EAAyBJ,KAAzB;AACAnB,IAAIsB,SAAJ,CAAcF,UAAUG,IAAxB,EAA6BH,SAA7B;AACApB,IAAIsB,SAAJ,CAAcD,OAAOE,IAArB,EAA0BF,MAA1B,E,CAEA;;AACA,OAAOG,KAAP,MAAkB,OAAlB;AACAA,MAAMC,QAAN,CAAeC,eAAf,GAA+B,IAA/B;AACA1B,IAAI2B,SAAJ,CAAcH,KAAd,GAAoBA,KAApB,C,CACA;;AACA,OAAOI,WAAP,MAAwB,cAAxB,C,CACA;;AACA5B,IAAIM,GAAJ,CAAQsB,WAAR,E,CACA;AACA;;AACA5B,IAAI6B,IAAJ,CAASC,OAAT,CAAiBC,IAAjB,GAAwB,wBAAxB,C,CACA;AACA;;AACA/B,IAAI6B,IAAJ,CAASC,OAAT,CAAiBE,WAAjB,GAA+B,IAA/B;AACAhC,IAAI6B,IAAJ,CAASC,OAAT,CAAiBJ,eAAjB,GAAiC,IAAjC,C,CACA;AACA;;AACA1B,IAAIiC,MAAJ,CAAW,gBAAX,EAA4B,UAASC,GAAT,EAAa;AACrC,MAAIC,OAAK,IAAIC,IAAJ,CAASF,GAAT,CAAT;AACA,MAAIG,IAAEF,KAAKG,WAAL,EAAN;AACA,MAAIC,IAAEJ,KAAKK,QAAL,KAAgB,CAAtB;AACA,MAAIC,IAAEN,KAAKO,OAAL,EAAN;AACA,MAAIC,IAAER,KAAKS,QAAL,EAAN;AACA,MAAIC,KAAGV,KAAKW,UAAL,EAAP;AACA,MAAIC,IAAEZ,KAAKa,UAAL,EAAN;AACAT,MAAE,EAAF,KAAOA,IAAE,MAAIA,CAAb;AACAE,MAAE,EAAF,KAAOA,IAAE,MAAIA,CAAb;AACA,mBAAUJ,CAAV,cAAeE,CAAf,cAAoBE,CAApB,cAAyBE,CAAzB,cAA8BE,EAA9B,cAAoCE,CAApC;AACH,CAXD,E,CAYA;AAEA;AAGA;AAEE;AAEA;;AAGF,IAAI/C,GAAJ,CAAQ;AACNE,gBADM;AAEN+C,UAAQ;AAAA,WAAKN,EAAE1C,GAAF,CAAL;AAAA,GAFF;AAGNM,cAHM,CAGS;;AAHT,CAAR,EAIG2C,MAJH,CAIU,MAJV","sourceRoot":"C:\\xampp\\htdocs\\CL\\PROJECT2\\vue_app_00","sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\n\r\nimport'mint-ui/lib/style.css'\r\n\r\nVue.config.productionTip = false\r\n//5: 设置请求的根路径 \r\n//Vue.http.options.root = \"http://127.0.0.1/vue_ser/\";\r\n//6:全局设置post 时候表音的数据组织格式为 application/x-www-form-urlencoded\r\n//Vue.http.options.emulateJSON = true;\r\n// 导入 MUI 的样式表， 和 Bootstrap 用法没有差别\r\nimport './lib/mui/css/mui.css'\r\n// 导入 MUI 的样式表，扩展图标样式，购物车图标\r\n// 还需要加载图标字体文件\r\nimport './lib/mui/css/icons-extra.css'\r\n\r\nimport './lib/mui/css/app.css'\r\n\r\n// 0.1:引入Vuex\r\nimport Vuex from \"vuex\"\r\n// 0.2:注册Vuex组件\r\nVue.use(Vuex)\r\n// 0.3:创建Vuex实例对象\r\nvar store=new Vuex.Store({\r\n  state:{\r\n    cartCount:0\r\n  },\r\n  mutations:{\r\n    increment(state,count){state.cartCount+=count},\r\n    substract(state){state.cartCount--},\r\n    clear(state){state.cartCount=0}\r\n  },\r\n  getters:{\r\n    optCartCount:function(state){\r\n      return state.cartCount;\r\n    }\r\n  }\r\n})\r\n// 0.4:将Vuex对象注册Vue对象\r\n\r\n//1:引入mint-ui Header组件\r\nimport{Header,Swipe,SwipeItem,Button} from \"mint-ui\"\r\n//2:注册Header组件\r\nVue.component(Header.name,Header);\r\n//3.注册Swipe/SwipeItem组件\r\nVue.component(Swipe.name,Swipe);\r\nVue.component(SwipeItem.name,SwipeItem);\r\nVue.component(Button.name,Button);\r\n\r\n//3.1引入axios库\r\nimport axios from 'axios'\r\naxios.defaults.withCredentials=true\r\nVue.prototype.axios=axios;\r\n//4.引入vue-resource库\r\nimport VueResource from \"vue-resource\";\r\n//5.注册vue-resource库\r\nVue.use(VueResource)\r\n//6.配置vue-resource\r\n//6.1设置请求根目录\r\nVue.http.options.root = \"http://127.0.0.1:3000/\";\r\n//6:全局设置post 时候表单的数据组织格式为 application/x-www-form-urlencoded\r\n//将提交数据进行转码操作\r\nVue.http.options.emulateJSON = true;\r\nVue.http.options.withCredentials=true;\r\n//7.创建日期类型过滤器\r\n//val:原先日期对象\r\nVue.filter(\"datatimeFilter\",function(val){\r\n    var data=new Date(val)\r\n    var y=data.getFullYear();\r\n    var m=data.getMonth()+1 ;\r\n    var d=data.getDate();\r\n    var h=data.getHours(); \r\n    var mi=data.getMinutes();\r\n    var s=data.getSeconds();\r\n    m<10&&(m=\"0\"+m);\r\n    d<10&&(d=\"0\"+d);\r\n    return `${y}-${m}-${d} ${h}:${mi}:${s}`;\r\n})\r\n//设置请求服务器根目录\r\n\r\n//将提交数据进行转码操作\r\n\r\n\r\n//7.创建一个日期类型的过滤器\r\n\r\n  //7.1:创建日期对象\r\n\r\n  //7.4:拼接字符串返回\r\n \r\n\r\nnew Vue({\r\n  router,\r\n  render: h => h(App),\r\n  store          //将Vuex对象注册 Vue实例\r\n}).$mount('#app')\r\n"]}]}